from __future__ import unicode_literals

from enaml.layout.api import vbox, hbox, align
from enaml.widgets.api import (
    Container, Field, FileDialogEx, Label, PushButton, Window,
    ObjectCombo, MultilineField
)


enamldef Main(Window): window:
    attr plotter
    attr path : str = ""
    attr X = ""
    attr Y = ""
    attr pair = ()
    attr filedict = {}
    title = 'Live Plotter'
    Container: c1:
        constraints = [
            vbox(
                hbox(lbl1, fld1, pb1, lbl2, fld2, lbl3, fld3, pb2, lbl4, oc1, pb3),
                fld4,
            ),
            align('v_center', lbl1, fld1, pb1, lbl2, fld2, lbl3, fld3, pb2, lbl4, oc1, pb3),
            pb1.height == fld1.height,
            pb2.height == fld2.height,
            pb3.height == fld2.height,
        ]
        Label: lbl1:
            text = 'File'
        Field: fld1:
            read_only = True
            text << window.path
        PushButton: pb1:
            text = 'Browse'
            clicked ::
                path = FileDialogEx.get_open_file_name(window)
                if path:
                    #path initially returned with single forward slashes, need to replace with double back slash
                    path = plotter.convertfilepath(path)
                    window.path = path
        Label: lbl2:
            text = 'X'
        Field: fld2:
            text := window.X
        Label: lbl3:
            text = 'Y'
        Field: fld3:
            text := window.Y
        PushButton: pb2:
            text = 'Add'
            clicked ::
                #form dict from path and x and y and add to window.dict
                window.filedict[window.path] = (window.X, window.Y)
                print(f"window.filedict {window.filedict}")
        Label: lbl4:
            text = 'Plot Overlay:'
        ObjectCombo: oc1:
            items = [True, False]
            selected := plotter.overlay_bool
        PushButton: pb3:
            text = 'Plot'
            clicked ::
                #give dict to start
                # plotter.overlay_bool = False
                plotter.filedict = window.filedict
                plotter.start_plot()
        Field: fld4:
            text << path
            
